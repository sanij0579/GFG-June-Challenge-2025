Search Pattern (Rabin-Karp Algorithm)
solutions:
class Solution:
    def search(self, pat, txt):
        n = len(txt)
        m = len(pat)
        if m > n:
            return []

        base = 256
        mod = 10**9 + 7

        pat_hash = 0
        txt_hash = 0
        h = 1

        for i in range(m - 1):
            h = (h * base) % mod

        for i in range(m):
            pat_hash = (base * pat_hash + ord(pat[i])) % mod
            txt_hash = (base * txt_hash + ord(txt[i])) % mod

        result = []
        
        for i in range(n - m + 1):
            if pat_hash == txt_hash:
                if txt[i:i+m] == pat:
                    result.append(i + 1)

            if i < n - m:
                txt_hash = (base * (txt_hash - ord(txt[i]) * h) + ord(txt[i + m])) % mod
                if txt_hash < 0:
                    txt_hash += mod

        return result
